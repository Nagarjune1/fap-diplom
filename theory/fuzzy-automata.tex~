\documentclass[a4paper,10pt]{article}
\usepackage[utf8x]{inputenc}
\usepackage[czech]{babel}

\include{headers}

%opening
\title{Fuzzy automaty}
\author{Martin Jašek}
\date{26. října 2014 --- ??}

\begin{document}

\maketitle
\tableofcontents

\newpage

\section{Základní pojmy}\label{basic-concepts}
V této kapitole budou zopakovány základní pojmy (a především jejich značení) potřebné pro studium problematiky automatů. Pokud není řečeno jinak, definice a značení jsou převzaty z \cite{belohlavek-fuz-rel-syss}.

\subsection{Množiny, relace, funkce}
\subsubsection*{Množiny}
Jako množinu označujeme kolekci objektů a značíme je velkými písmeny ($M$, $A$, $B$, $\dots$). Pokud objekt $x$ náleží do množiny $M$, píšeme $x \in M$. V opačném případě píšeme $x \notin M$ a říkáme, že objekt $x$ nenáleží do množiny $M$. Velikost (mohutnost, počet prvků) množiny $M$ značíme $|M|$. Prázdnou množinu značíme $\emptyset$. Rovnost množin $M$ a $N$ značíme $M = N$. Podmnožinou $M$ množiny $N$ značíme $M \subseteq N$. 
Pro množiny $M$ a $N$ dále zavádíme $M \cap N$ (průnik) $M \cup N $ (sjednocení) $M \setminus N$ (rozdíl) a $\overline{M}$ (doplněk).

Potenční množinu množiny $M$ (systém množin, který je tvořen všemi podmnožinami množiny $M$) značíme $2^M$. Symbol $\mathbb{N}$ ($\mathbb{N}_0$, $\mathbb{Z}$, $\mathbb{Q}$, $\mathbb{R}$) značí množinu všech přirozených (přirozených včetně nuly, celých, racionálních, reálných) čísel.

\subsubsection*{Relace}
Kartézský součin množin $M_1, \dots, M_n$ značíme $M_1 \times \dots \times M_n$ a jeho libovolnou podmnožinu nazýváme ($n$-ární) relace a značíme ji velkými písmeny ($R, S, T$). Pro $n=2$ nazýváme relaci binární, pro $R \subseteq M \times M$ pak binární relací $R$ na množině $M$. Binární relace $R$ na množině $M$ je:
\begin{itemize}
 \item reflexivní, pokud pro každé $x \in M$ platí: $ \langle x, x \rangle \in R $
 \item irreflexivní, pokud neexistuje žádné $x \in M$ takové, že: $ \langle x, x \rangle \in R $
 \item symetrická, pokud pro každé $x, y \in M$ platí: jestliže $ \langle x, y \rangle \in R$ pak $\langle y, x \rangle \in R$
 \item antisymetrická, pokud pro každé $x \in M$ platí: jestliže $ \langle x, y \rangle \in R$ a $\langle y, x \rangle \in R$ pak x = y 
 \item asymetrická, pokud neexistuje žádné $x, y \in M$ takové, že: jestliže $ \langle x, y \rangle \in R$ pak $\langle y, x \rangle \in R$
 \item tranzitivní, pokud pro každé $x, y, z \in M$ platí: $ \langle x, y \rangle \in R$ a $\langle y, z \rangle \in R$,  pak $\langle x, z \rangle \in R$
 \item úplná, pokud pro každé $x, y \in M$ platí: $ \langle x, y \rangle \in R$ nebo $\langle y, x \rangle \in R$
\end{itemize}

\RLY{Uzávěry? Budu je používat?}

Složení relací $R$ a $S$ značíme $R \circ S$ a inverzní relaci $R^{-1}$ k relaci $R$.

\subsubsection*{Funkce}
Relaci $f$ nazýváme zobrazení (funkce) z množiny $X$ (množin $X_1, \dots, X_n$) do množiny $Y$ pokud pro každé $x \in X$ ($\langle x_1, \dots, x_n \rangle \in X_1 \times \dots \times X_n$) existuje právě jedno $y \in Y$ takové, že $\langle x, y \rangle \in f$ ($\langle x_1, \dots, x_n, y \rangle \in f$). Funkci $f$ zkráceně zapisujeme $f: X \rightarrow Y$ ($f: X_1 \times \dots \times X_n \rightarrow Y$) případně $y = f(x)$ ($y = f(x_1, \dots, x_n)$).

\subsubsection*{Ekvivalence a rozklady}
Symetrická, reflexivní a tranzitivní relace $\equiv$ se nazývá ekvivalence. Rozklad $\Pi$ množiny $M$ je systém neprázdných dizjunktních podmnožin množiny $M$. Třída rozkladu $\Pi$ prvku $x \in M$ se značí $\left[ x \right]_\Pi$.

\subsection{Uspořádání, uspořádané množiny, svazy}
Reflexivní, antisymetrická a tranzitivní relace $\leq \;\; \subset M \times M$ se nazývá (částečné) uspořádání. Místo $\langle x, y\rangle \in \;\; \leq$ píšeme $x \leq y$. Dvojice $\langle M, \leq \rangle$ se nazývá uspořádaná množina. Pokud pro každé $x, y \in M$ platí buď $x \leq y$ nebo $y \leq x$, pak $\langle M, \leq \rangle$ nazýváme úplné uspořádání (řetěz).

Mějme množinu $N \subset M$. Prvek $x \in N$ se nazývá minimální (maximální), pokud pro každé $y \in N$ takové, že $x \leq y$ ($y \leq x$), platí $x = y$. Prvek $x \in N$ se nazývá nejmenší (největší), pokud neexistuje žádné $y \in N$ takové, že $y \leq x$ ($x \leq y$). Pokud existuje nejmenší (největší) prvek, budeme jej značit $0$ ($1$).

Dolní kužel $\mathcal{L}(A)$ (horní kužel $\mathcal{U}(A)$) je množina všech $x \in M$ takových, pro které platí $x \leq y$ ($y \leq x$) pro každé $y \in A$. Pokud má $\mathcal{L}(A)$ ($\mathcal{U}(A)$) největší (nejmenší) prvek, nazývá se A infimum (suprémum) a značí se $\inf A$ nebo $\bigwedge A$ ($\sup A$ nebo $\bigvee A$).

Pokud má $\langle M, \leq \rangle$ infimum i suprémum pro každou neprázdnou $A \subseteq M$, nazývá se svaz. Pokud svaz má infimum i suprémum pro každou $A \subseteq M$ nazývá se úplný. 

\TODO{hustě uspořádáný svaz\RLY}


\subsection{Abeceda a jazyk}
 V této kapitole budou zadefinovány a rozebrány základní pojmy z teorie automatů. Značení bylo přejato z \TODO{FJAA}. 

\subsubsection*{Abeceda}
Základním pojmem při studiu automatů je abeceda. Abeceda je neprázdná množina symbolů a značí se velkými řeckými písmeny (nejčastěji $\Sigma$). Abecedou může být například \uv{všechna velká písmena latinky}, množina $\left\{\neg, \rightarrow, (, ), \varphi_1, \dots, \varphi_n \right\}$ (abeceda výrokové logiky) nebo např. číslice $0$ -- $9$ a symboly plus, mínus a tečka.

\subsubsection*{Řetezec}
Posloupnost $u = a_1 a_2 \dots a_n$ kde $a_1,  a_2, \dots, a_n \in \Sigma$ se nazývá řetězec $u$ nad abecedou $\Sigma$. Číslo $n$ je pak délka řetězce $u$, která se také značí $|u|$. Řetězec, který má nulovou délku, značíme $\varepsilon$. Řetězcem nad abecedou všech velkých písmen latinky pak může být například $KMI$ nebo $INFORMATIKA$.

Řetězec $u \circ v = a_1 \dots a_n b_1 \dots b_m$ (častěji však $uv$) se nazývá zřetězení (konkatenace) řetězců $u = a_1 \dots a_n$ a $v = b_1 \dots b_m$ a má délku $|uv| = n + m$. $N$-tá mocnina $u^n$ řetězce $u$ je definována rekurentním předpisem:
$$
  u^n = \begin{dcases}
    \varepsilon & \text{pokud } n = 0\\
    u u^{n-1} & \text{jinak}
  \end{dcases}
$$

Symbolem $\Sigma^*$ se značí množina všech řetězců nad abecedou $\Sigma$ (včetně $\varepsilon$). Symbol $\Sigma^+$ pak značí všechny řetězce nad abecedou $\Sigma$ vyjma $\varepsilon$. %Symbol $\Sigma^*$ se nazývá Kleeneho uzávěř, $\Sigma^+$ pak pozitivní uzávěř.

\subsubsection*{Jazyk}
Pojmem (formální) jazyk se označuje určitý vybraná množina řetězců nad určitou abecedou. Jazyk $L$ nad abecedou $\Sigma$ je tedy podmnožina $\Sigma^*$. 

Nad jazyky $L$, $L_1$ a $L_2$ nad abecedami $\Sigma$, $\Sigma_1$ a $\Sigma_2$ se zavádí:
$$
\begin{array}{ll}
  L_1 L_2 		= \left\{ u v \,|\, u \in L_1, v \in L_2 \right\}	& \text{zřetězení (produkt)}	\\ \\
  L^n 			= \begin{dcases}
      \left\{ \varepsilon \right\} 	& \text{pokud } n = 0 \\
      L L^{n-1} 			& \text{jinak}
    \end{dcases} 								& \text{$n$-tá mocnina}		\\ \\
  
  L^* 	= \bigcup\limits_{i=0}^{\infty} L^i						& \text{Kleeneho uzávěr}	\\ \\
  L^+ 	= \bigcup\limits_{i=1}^{\infty} L^i						& \text{pozitivní uzávěr}
\end{array}
$$

\TODO{ještě něco?}


\section{Definice automatu}
V této kapitole je zadefinován pojem \uv{automat} a s ním související pojmy.

\subsection{Konečný stroj}
Automat je specifickým případem výpočetního modelu \uv{stroj}. Bude proto nejdříve zadefinován stroj.

\begin{definition}[Konečný stroj\cite{modeson-malik-fuzz-aut-and-langs}]\label{finite-machine}
Konečný stroj je šestice $\mathcal{M} = \langle Q, \Sigma, \Upsilon,  \delta, \sigma, s \rangle$ kde
$$
\begin{array}{l}
  Q \text{ je konečná množina stavů} \\
  \Sigma \text{ je konečná vstupní abeceda} \\
  \Upsilon \text{ je konečná výstupní abeceda} \\
  \delta: Q \times \Sigma \rightarrow Q  \text{  je přechodová funkce} \\
  \sigma: Q \times \Sigma \rightarrow \Upsilon  \text{  je výstupní funkce} \\
  s \in Q \text{ je počáteční stav} \\
\end{array}
$$
\end{definition}

Přechodová funkce $\delta$ nám říká, že nachází-li se stroj $\mathcal{M}$ ve stavu $q \in Q$ a na vstupu je $x \in \Sigma$, tak stroj přejde do stavu $q' \in Q$ takového, že $\delta(q, x) = q'$. Obdobně - výstupní funkce $\sigma$ na výstup zapíše symbol $y \in \Upsilon$ právě když se automat $\mathcal{M}$ nachází ve stavu $q \in Q$, na vstupu je symbol $x \in \Sigma$ a $\sigma(q, x) = y$. 

Dále se zavádí pojmy konfigurace a výpočet.

\begin{definition}[Konfigurace\cite{xxx}]\label{machine-configuration}
Konfigurace $c$ konečného stroje $\mathcal{M}$ je libovolný prvek z množiny $\Sigma^* \times Q \times \Upsilon^*$.

\TODO{značení, zdroj = FJAA}
\end{definition}

\begin{definition}[Výpočet\cite{xxx}]\label{machine-computation}
Výpočet $c$ konečného stroje $\mathcal{M}$ je posloupnost konfigurací $c_1, c_2, \dots c_n$.

\TODO{značení, zdroj = FJAA}
\end{definition}

\TODO{rozsíšená přechodová funkce $\delta^*$}

\TODO{tohle je jen tak mimochodem, na nějaký hluboký vlastnostni a reprezentaci bych se asi vykašlal ...}

Stroj $\mathcal{M}$ na svém vstupu čte řetězec $u$ nad abecedou $\Sigma$. Stroj postupně čte jednotivé symboly slova $u$ a mění svou konfiguraci na základě přechodové a výstupní funkce následovně: Pro symbol vstupní abecedy $x$ přejde ze stavu $q$ do stavu $q'$ pokud $\delta(q, x) = q'$ a na výstup zapíše $y$ z výstupní abecedy, pokud $\sigma(q, x) = y$. Výsledkem je slovo z výstupní abecedy zapsané na výstupu.

\subsection{Konečný automat}
Konečný automat je stroj, jehož výstupní abeceda je dvojprvková. Klademe $\Upsilon = \left\{ 0, 1 \right\}$.
\begin{definition}[Konečný automat\cite{modeson-malik-fuzz-aut-and-langs}]\label{finite-automata}
Konečný automat $\mathcal{A}$ je konečný stroj $\langle Q, \Sigma, \Upsilon,  \delta, \sigma, s \rangle$ kde $\Upsilon = \left\{ 0, 1 \right\}$.
\end{definition}

Poznámka: Pojmy konfigurace a výpočet jsou proto analogické jako pro konečný stroj (viz definice \ref{machine-configuration} a \ref{machine-computation}).

Z definice konečného automatu je vidět, že jeho výstupem je řetězec symbolů $1$ a $0$. Tohoto faktu bude využito při konstrukci konečného determistického automatu.

\subsection{Konečný determistický automat}
Uvažujme nyní automat $\mathcal{A}$ \TODO{to by chtělo obrázek}, spplňující vlastnost:
$$
\begin{array}{c}
\text{Pro libovolné dva stavy } q, q' \in Q \text{ a symboly } x, x' \in \Sigma \text{ platí:}\\
\text{jestliže } \delta(q, x) = \delta(q', x') \text{ pak } \sigma(q, x) = \sigma(q', x')
\end{array}
$$
%zobrazí-li se každá dvojice $\langle q \in Q , x \in \Sigma \rangle$ v $\delta$ na nějaké $q' \in Q$, pak se $\langle q, x \rangle$ v $\sigma$ zobrazí pokaždé na $1$ nebo $0$.
Pro takovýto automat vytvoříme nové zobrazení $\sigma': Q \rightarrow \left\{ 0, 1 \right\}$ a definujme jej následovně:
$$
  \sigma'(q') = \begin{dcases}
    1 	& \text{pokud $\sigma(q, x) = 1$ pro všechny $q \in Q$ a $x \in \Sigma$ takové, že $\delta(q, x) = q'$} \\
    0	& \text{jinak}
  \end{dcases}
$$
Nyní můžeme zavést množinu $F$ jako množinu \uv{koncových stavů}:
$$
  F = \left\{ q \in Q | \sigma'(q) = 1 \right\}
$$
Stav $q$ je tedy koncový právě tehdy, pokud automat $\mathcal{A}$ přechodem z libovolného (jiného nebo téže) stavu $q'$ zapsal na výstup $1$. 

Množinu $F$ koncových stavů nyní použijeme k zadefinování konečného deterministického automatu.
\begin{definition}[Konečný deterministcký automat\cite{xxx}]\label{kda}
  \TODO{FJAA}
\end{definition}


\section{Fuzzy automaty}
\subsection{Potřebné pojmy z teorie fuzzy množin}
V této kapitole se nachází výpis základních definic z teorie fuzzy logiky a fuzzy množin nutný pro práci s fuzzy automaty. Definice byly přejaty z \cite{zadeh-fuzzy-sets} a značení případně upraveno tak, aby korespondovalo se značením v kapitole \ref{basic-concepts}.

Fuzzy množina je kolekce objektů zobecňujcí \uv{klasickou} množinu. Uvažuje se nad univerzem $X$ (nebo jeho libovolnou neprázdnou\RLY podmnožinou) a u každého objektu z tohoto univerza se uvádí, jak moc do fuzzy množiny náleží. K tomu slouží tzv. charakteristická funkce. To je zobrazení $f_A$ z univerza $X$ do intervalu $\left[0, 1\right]$\footnote{obecně do libovolného svazu\RLY}. 

Pokud je pro $x \in X$ $f_A(x) = 0$, pak objekt do fuzzy množiny $A$ jistě nenáleží, pokud je $f_A(x) = 1$, pak objekt do fuzzy množiny $A$ jistě náleží \TODO{jak je český překlad?}. Pokud je $0 < f_A(x) < 1$, pak říkáme, že objekt $x$ do fuzzy množiny $A$ náleží ve stupni $f_A(x)$.

Pokud je $f_A(x) = 0$ pro každé $x \in X$, pak fuzzy množinu $A$ nazýváme prázdnou fuzzy množinou. Dvě fuzzy množiny $A$ a $B$ se rovnají, pokud $f_A = f_B$ (pro každé $x \in X$ platí $f_A(x) = f_B(x)$). Fuzzy množina $A$ je podmnožinou fuzzy množiny $B$ (píšeme $A \subseteq B$) pokud je $f_A \leq f_B$.

Mějme fuzzy množiny $A$ a $B$ s charakteristickými funkcemi $f_A$ a $f_B$. Pak definujeme $A \cap B$ (průnik fuzzy množin), $A \cup B$ (sjednocení fuzzy množin) a $\overline{A}$(doplněk fuzzy množiny) jako fuzzy množiny s charakteristickými funkcemi $f_{A \cap B}$ a $f_{A \cup B}$, $f_{\overline{A}}$ takovýmito:
% nad univerzem $X$
$$
\begin{array}{l}
  f_{A \cap B}(x) = min(f_A(x), f_B(x))	\\
  f_{A \cup B}(x) = max(f_A(x), f_B(x))	\\
  f_{\overline{A}}(x) = 1 - f_A(x)		
\end{array}
$$

\TODO{Pro průnik a sjednocení platí De Morganovy zákony a zákony distributivity.\RLY \TODO{a tak dále}}

\TODO{Fuzzy relace, fuzzy zobrazení}

\cite{klir-yuan-fuzzy-sets-and-logic}

\subsection{Nedeterministický fuzzy automat}

\begin{definition}[Fuzzy automat\cite{belohlavek-fuz-rel-syss}]\label{fuzzy-automata}
Mějme konečný\RLY reziduovaný svaz $\mathbf{L}$ a konečnou abecedu $\Sigma$. Pak $\mathbf{L}$-automat $\mathcal{M}$ nad abecedou $\Sigma$ je pětice $\mathcal{M} = \langle Q, \Sigma, Q_I, Q_F, \delta \rangle$ kde
\begin{itemize}
 \item[] $Q$ je konečná množina stavů
%  \item[] $\Sigma$ je konečna abeceda
 \item[] $Q_I$ je $\mathbf{L}$-množina nad $Q$ počátečních stavů
 \item[] $Q_F$ je $\mathbf{L}$-množina nad $Q$ koncových stavů
 \item[] $\delta$ je $\mathbf{L}$-relace $\delta \subseteq Q \times \Sigma \times Q$\RLY (přechodová funkce)
\end{itemize}

%Definice \ref{fuzzy-automata} nám říká, že ...
\end{definition}




\begin{definition}[Rozšířená přechodová funkce\cite{xxx}]\label{extended-transit-function}
 Pro $\mathbf{L}$-automat $\mathcal{M}$ s přechodovou funkcí $\delta$ definujeme rozšířenou přechodovu funkci jako $\mathbf{L}$-relaci $\delta^* \subseteq Q \times \Sigma^* \times Q$ definovanou:
 $$
  \delta^*(q, \alpha\ q') = \bigvee_{q_0 = q, q_1, \dots, q_n = q' \in Q} \delta(q_0, s_1, q_1) \wedge \dots \wedge \delta(q_{n-1}, s_n, q_n)
 $$
 kde $a = s_1s_2\dots s_n$ a $s_1, \dots, s_n \in \Sigma$.
\end{definition}

\begin{definition}[Jazyk rozpoznávaný automatem\cite{xxx}]\label{language-recognized-by-automata}
 Pro $\mathbf{L}$-automat $\mathcal{M}$ definujeme $\mathbf{L}$-jazyk $\mathcal{L}(\mathcal{M})$ rozpoznávaný automatem $\mathcal{M}$ jako $\mathbf{L}$-množinu:
 
 $$
 (\mathcal{L}(\mathcal{M}))(\alpha) = \bigvee_{q, q' \in Q} Q_I(q) \wedge \delta(q, \alpha, q') \wedge Q_F(q')
 $$
\end{definition}


\begin{note}
  Místo \textit{$\mathbf{L}$-automat $\mathcal{M}$} se bude nadále používat značení \textit{automat $\mathcal{M}$} (za předpokladu, že není nutné uvádět $\mathbf{L}$).
\end{note}


\TODO{bacha na značení jazyka (v textechech o automatech). !!!}

\newpage
\section{A tak dále ...}
Původní zmíňka \cite{wee-adaptive-algs-and-fuz-set-concept}, Definice Fuzzy množin NEpoužít z \cite{zadeh-fuzzy-set} (použít \cite{belohlavek-fuzz-rel-syss}). BelKru \cite{belohlavek-krupka-minimalization}

Bělohlávek - determiniszmus fuzzy matu: \cite{belohlavek-determinism}.

Další materiály na fuzzy množiny: [ 51, 108, 110, 114, 115, 266 ].

Pseudoautomaton (45)
Automaton (46)

Max-min autmata (48+++)
Asynchronous max-product automaton (111+)
Max-product automaton (114+)

Fuzzy automaton (393)
Fuzzy tree automation (158), 
Fuzzy finite state machine (237)
Finite fuzzy automaton (463, 404, 367)
Finite quasi-fuzzy autmaton (384)
Subfuzzy finite state machine (305)
Partial fuzzy automation (325)
$\mathbf{L}$-automaton (415)

Probablistic automata (173 - 175)
Probabilistic pushdown automaton (218+)
Probalistic pseudoautomaton (223)
Determinstic pseudoautomaton (233)


Weighted automaton (449)
Subautomaton (503)
automnaton with tolerance (504)



\newpage
\bibliography{resources}
\bibliographystyle{plain}


\end{document}
